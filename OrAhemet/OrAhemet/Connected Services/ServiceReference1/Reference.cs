//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 16.0.31829.152
// 
namespace OrAhemet.ServiceReference1 {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class User : OrAhemet.ServiceReference1.BaseEntity {
        
        private string UserCodeField;
        
        private int UserIDField;
        
        private string UserNameField;
        
        private string UserTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserCode {
            get {
                return this.UserCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCodeField, value) != true)) {
                    this.UserCodeField = value;
                    this.RaisePropertyChanged("UserCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrAhemet.ServiceReference1.Family))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrAhemet.ServiceReference1.Transaction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrAhemet.ServiceReference1.Charge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrAhemet.ServiceReference1.Child))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrAhemet.ServiceReference1.TypeCharge))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrAhemet.ServiceReference1.PaymentAccount))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrAhemet.ServiceReference1.CreditCard))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrAhemet.ServiceReference1.HorahatKeva))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(OrAhemet.ServiceReference1.User))]
    public partial class BaseEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsChangedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChanged {
            get {
                return this.IsChangedField;
            }
            set {
                if ((this.IsChangedField.Equals(value) != true)) {
                    this.IsChangedField = value;
                    this.RaisePropertyChanged("IsChanged");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Family", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Family : OrAhemet.ServiceReference1.BaseEntity {
        
        private string AdressField;
        
        private string CommentsField;
        
        private int FamilyIDField;
        
        private string FatherCellPhonField;
        
        private string FatherNameField;
        
        private string FatherTZField;
        
        private string LastNameField;
        
        private string MotherCellPhonField;
        
        private string MotherIDField;
        
        private string MotherNameField;
        
        private string PhonField;
        
        private decimal TotalFamilyDebtsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Adress {
            get {
                return this.AdressField;
            }
            set {
                if ((object.ReferenceEquals(this.AdressField, value) != true)) {
                    this.AdressField = value;
                    this.RaisePropertyChanged("Adress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FamilyID {
            get {
                return this.FamilyIDField;
            }
            set {
                if ((this.FamilyIDField.Equals(value) != true)) {
                    this.FamilyIDField = value;
                    this.RaisePropertyChanged("FamilyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FatherCellPhon {
            get {
                return this.FatherCellPhonField;
            }
            set {
                if ((object.ReferenceEquals(this.FatherCellPhonField, value) != true)) {
                    this.FatherCellPhonField = value;
                    this.RaisePropertyChanged("FatherCellPhon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FatherName {
            get {
                return this.FatherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FatherNameField, value) != true)) {
                    this.FatherNameField = value;
                    this.RaisePropertyChanged("FatherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FatherTZ {
            get {
                return this.FatherTZField;
            }
            set {
                if ((object.ReferenceEquals(this.FatherTZField, value) != true)) {
                    this.FatherTZField = value;
                    this.RaisePropertyChanged("FatherTZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MotherCellPhon {
            get {
                return this.MotherCellPhonField;
            }
            set {
                if ((object.ReferenceEquals(this.MotherCellPhonField, value) != true)) {
                    this.MotherCellPhonField = value;
                    this.RaisePropertyChanged("MotherCellPhon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MotherID {
            get {
                return this.MotherIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MotherIDField, value) != true)) {
                    this.MotherIDField = value;
                    this.RaisePropertyChanged("MotherID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MotherName {
            get {
                return this.MotherNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MotherNameField, value) != true)) {
                    this.MotherNameField = value;
                    this.RaisePropertyChanged("MotherName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phon {
            get {
                return this.PhonField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonField, value) != true)) {
                    this.PhonField = value;
                    this.RaisePropertyChanged("Phon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalFamilyDebts {
            get {
                return this.TotalFamilyDebtsField;
            }
            set {
                if ((this.TotalFamilyDebtsField.Equals(value) != true)) {
                    this.TotalFamilyDebtsField = value;
                    this.RaisePropertyChanged("TotalFamilyDebts");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Transaction : OrAhemet.ServiceReference1.BaseEntity {
        
        private OrAhemet.ServiceReference1.Charge ChargeField;
        
        private System.Nullable<int> ChargesIDField;
        
        private string CommentsField;
        
        private System.Nullable<bool> StatusField;
        
        private int TransactionsIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrAhemet.ServiceReference1.Charge Charge {
            get {
                return this.ChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChargeField, value) != true)) {
                    this.ChargeField = value;
                    this.RaisePropertyChanged("Charge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargesID {
            get {
                return this.ChargesIDField;
            }
            set {
                if ((this.ChargesIDField.Equals(value) != true)) {
                    this.ChargesIDField = value;
                    this.RaisePropertyChanged("ChargesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionsID {
            get {
                return this.TransactionsIDField;
            }
            set {
                if ((this.TransactionsIDField.Equals(value) != true)) {
                    this.TransactionsIDField = value;
                    this.RaisePropertyChanged("TransactionsID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Charge", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Charge : OrAhemet.ServiceReference1.BaseEntity {
        
        private System.Nullable<System.TimeSpan> BillingDateField;
        
        private int ChargeIDField;
        
        private OrAhemet.ServiceReference1.Child ChildField;
        
        private System.Nullable<int> ChildIDField;
        
        private System.Nullable<System.TimeSpan> DatePaymentField;
        
        private OrAhemet.ServiceReference1.Family FamilyField;
        
        private int FamilyIDField;
        
        private int PaymentAccountsIDField;
        
        private OrAhemet.ServiceReference1.TypeCharge TypeChargeField;
        
        private int TypeChargeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> BillingDate {
            get {
                return this.BillingDateField;
            }
            set {
                if ((this.BillingDateField.Equals(value) != true)) {
                    this.BillingDateField = value;
                    this.RaisePropertyChanged("BillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargeID {
            get {
                return this.ChargeIDField;
            }
            set {
                if ((this.ChargeIDField.Equals(value) != true)) {
                    this.ChargeIDField = value;
                    this.RaisePropertyChanged("ChargeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrAhemet.ServiceReference1.Child Child {
            get {
                return this.ChildField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildField, value) != true)) {
                    this.ChildField = value;
                    this.RaisePropertyChanged("Child");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChildID {
            get {
                return this.ChildIDField;
            }
            set {
                if ((this.ChildIDField.Equals(value) != true)) {
                    this.ChildIDField = value;
                    this.RaisePropertyChanged("ChildID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> DatePayment {
            get {
                return this.DatePaymentField;
            }
            set {
                if ((this.DatePaymentField.Equals(value) != true)) {
                    this.DatePaymentField = value;
                    this.RaisePropertyChanged("DatePayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrAhemet.ServiceReference1.Family Family {
            get {
                return this.FamilyField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyField, value) != true)) {
                    this.FamilyField = value;
                    this.RaisePropertyChanged("Family");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FamilyID {
            get {
                return this.FamilyIDField;
            }
            set {
                if ((this.FamilyIDField.Equals(value) != true)) {
                    this.FamilyIDField = value;
                    this.RaisePropertyChanged("FamilyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentAccountsID {
            get {
                return this.PaymentAccountsIDField;
            }
            set {
                if ((this.PaymentAccountsIDField.Equals(value) != true)) {
                    this.PaymentAccountsIDField = value;
                    this.RaisePropertyChanged("PaymentAccountsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrAhemet.ServiceReference1.TypeCharge TypeCharge {
            get {
                return this.TypeChargeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeChargeField, value) != true)) {
                    this.TypeChargeField = value;
                    this.RaisePropertyChanged("TypeCharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeChargeID {
            get {
                return this.TypeChargeIDField;
            }
            set {
                if ((this.TypeChargeIDField.Equals(value) != true)) {
                    this.TypeChargeIDField = value;
                    this.RaisePropertyChanged("TypeChargeID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Child", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Child : OrAhemet.ServiceReference1.BaseEntity {
        
        private int ChildIDField;
        
        private string ChildNameField;
        
        private string ChildTZField;
        
        private string ClassField;
        
        private string ClinicField;
        
        private string CommentsField;
        
        private System.Nullable<System.TimeSpan> DateOfBirthField;
        
        private int FamilyIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChildID {
            get {
                return this.ChildIDField;
            }
            set {
                if ((this.ChildIDField.Equals(value) != true)) {
                    this.ChildIDField = value;
                    this.RaisePropertyChanged("ChildID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildName {
            get {
                return this.ChildNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildNameField, value) != true)) {
                    this.ChildNameField = value;
                    this.RaisePropertyChanged("ChildName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChildTZ {
            get {
                return this.ChildTZField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildTZField, value) != true)) {
                    this.ChildTZField = value;
                    this.RaisePropertyChanged("ChildTZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Class {
            get {
                return this.ClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassField, value) != true)) {
                    this.ClassField = value;
                    this.RaisePropertyChanged("Class");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Clinic {
            get {
                return this.ClinicField;
            }
            set {
                if ((object.ReferenceEquals(this.ClinicField, value) != true)) {
                    this.ClinicField = value;
                    this.RaisePropertyChanged("Clinic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FamilyID {
            get {
                return this.FamilyIDField;
            }
            set {
                if ((this.FamilyIDField.Equals(value) != true)) {
                    this.FamilyIDField = value;
                    this.RaisePropertyChanged("FamilyID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TypeCharge", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class TypeCharge : OrAhemet.ServiceReference1.BaseEntity {
        
        private decimal AmountToPayField;
        
        private string DescriptionField;
        
        private int TypeChargesIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountToPay {
            get {
                return this.AmountToPayField;
            }
            set {
                if ((this.AmountToPayField.Equals(value) != true)) {
                    this.AmountToPayField = value;
                    this.RaisePropertyChanged("AmountToPay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeChargesID {
            get {
                return this.TypeChargesIDField;
            }
            set {
                if ((this.TypeChargesIDField.Equals(value) != true)) {
                    this.TypeChargesIDField = value;
                    this.RaisePropertyChanged("TypeChargesID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentAccount", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class PaymentAccount : OrAhemet.ServiceReference1.BaseEntity {
        
        private OrAhemet.ServiceReference1.CreditCard CreditCardField;
        
        private int FamilyIDField;
        
        private OrAhemet.ServiceReference1.HorahatKeva HorahatKevaField;
        
        private System.Nullable<bool> IsActiveField;
        
        private int PaymentAccountsIDField;
        
        private System.Nullable<short> PeymentTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrAhemet.ServiceReference1.CreditCard CreditCard {
            get {
                return this.CreditCardField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCardField, value) != true)) {
                    this.CreditCardField = value;
                    this.RaisePropertyChanged("CreditCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FamilyID {
            get {
                return this.FamilyIDField;
            }
            set {
                if ((this.FamilyIDField.Equals(value) != true)) {
                    this.FamilyIDField = value;
                    this.RaisePropertyChanged("FamilyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrAhemet.ServiceReference1.HorahatKeva HorahatKeva {
            get {
                return this.HorahatKevaField;
            }
            set {
                if ((object.ReferenceEquals(this.HorahatKevaField, value) != true)) {
                    this.HorahatKevaField = value;
                    this.RaisePropertyChanged("HorahatKeva");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentAccountsID {
            get {
                return this.PaymentAccountsIDField;
            }
            set {
                if ((this.PaymentAccountsIDField.Equals(value) != true)) {
                    this.PaymentAccountsIDField = value;
                    this.RaisePropertyChanged("PaymentAccountsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> PeymentType {
            get {
                return this.PeymentTypeField;
            }
            set {
                if ((this.PeymentTypeField.Equals(value) != true)) {
                    this.PeymentTypeField = value;
                    this.RaisePropertyChanged("PeymentType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreditCard", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class CreditCard : OrAhemet.ServiceReference1.BaseEntity {
        
        private string CardNumberField;
        
        private int CreditCardIDField;
        
        private string NameCardHolderField;
        
        private int PaymentAccountsIDField;
        
        private System.Nullable<int> SecurityIteratureField;
        
        private string TZCardHolderField;
        
        private System.Nullable<System.TimeSpan> ValidityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreditCardID {
            get {
                return this.CreditCardIDField;
            }
            set {
                if ((this.CreditCardIDField.Equals(value) != true)) {
                    this.CreditCardIDField = value;
                    this.RaisePropertyChanged("CreditCardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameCardHolder {
            get {
                return this.NameCardHolderField;
            }
            set {
                if ((object.ReferenceEquals(this.NameCardHolderField, value) != true)) {
                    this.NameCardHolderField = value;
                    this.RaisePropertyChanged("NameCardHolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentAccountsID {
            get {
                return this.PaymentAccountsIDField;
            }
            set {
                if ((this.PaymentAccountsIDField.Equals(value) != true)) {
                    this.PaymentAccountsIDField = value;
                    this.RaisePropertyChanged("PaymentAccountsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SecurityIterature {
            get {
                return this.SecurityIteratureField;
            }
            set {
                if ((this.SecurityIteratureField.Equals(value) != true)) {
                    this.SecurityIteratureField = value;
                    this.RaisePropertyChanged("SecurityIterature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TZCardHolder {
            get {
                return this.TZCardHolderField;
            }
            set {
                if ((object.ReferenceEquals(this.TZCardHolderField, value) != true)) {
                    this.TZCardHolderField = value;
                    this.RaisePropertyChanged("TZCardHolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Validity {
            get {
                return this.ValidityField;
            }
            set {
                if ((this.ValidityField.Equals(value) != true)) {
                    this.ValidityField = value;
                    this.RaisePropertyChanged("Validity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HorahatKeva", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class HorahatKeva : OrAhemet.ServiceReference1.BaseEntity {
        
        private System.Nullable<int> AccountNumberField;
        
        private System.Nullable<int> BankNumberField;
        
        private System.Nullable<int> BranchNumberField;
        
        private int HorahatKevaIDField;
        
        private System.Nullable<System.TimeSpan> MonthlyBillingDateField;
        
        private string NameAccountHoldersField;
        
        private int PaymentAccountsIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AccountNumber {
            get {
                return this.AccountNumberField;
            }
            set {
                if ((this.AccountNumberField.Equals(value) != true)) {
                    this.AccountNumberField = value;
                    this.RaisePropertyChanged("AccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BankNumber {
            get {
                return this.BankNumberField;
            }
            set {
                if ((this.BankNumberField.Equals(value) != true)) {
                    this.BankNumberField = value;
                    this.RaisePropertyChanged("BankNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BranchNumber {
            get {
                return this.BranchNumberField;
            }
            set {
                if ((this.BranchNumberField.Equals(value) != true)) {
                    this.BranchNumberField = value;
                    this.RaisePropertyChanged("BranchNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HorahatKevaID {
            get {
                return this.HorahatKevaIDField;
            }
            set {
                if ((this.HorahatKevaIDField.Equals(value) != true)) {
                    this.HorahatKevaIDField = value;
                    this.RaisePropertyChanged("HorahatKevaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> MonthlyBillingDate {
            get {
                return this.MonthlyBillingDateField;
            }
            set {
                if ((this.MonthlyBillingDateField.Equals(value) != true)) {
                    this.MonthlyBillingDateField = value;
                    this.RaisePropertyChanged("MonthlyBillingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameAccountHolders {
            get {
                return this.NameAccountHoldersField;
            }
            set {
                if ((object.ReferenceEquals(this.NameAccountHoldersField, value) != true)) {
                    this.NameAccountHoldersField = value;
                    this.RaisePropertyChanged("NameAccountHolders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentAccountsID {
            get {
                return this.PaymentAccountsIDField;
            }
            set {
                if ((this.PaymentAccountsIDField.Equals(value) != true)) {
                    this.PaymentAccountsIDField = value;
                    this.RaisePropertyChanged("PaymentAccountsID");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserTable", ReplyAction="http://tempuri.org/IService1/GetUserTableResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.User>> GetUserTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFamilyTable", ReplyAction="http://tempuri.org/IService1/GetFamilyTableResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.Family>> GetFamilyTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTransactionsWithDebts", ReplyAction="http://tempuri.org/IService1/GetTransactionsWithDebtsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.Transaction>> GetTransactionsWithDebtsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTransactionsWithoutDebts", ReplyAction="http://tempuri.org/IService1/GetTransactionsWithoutDebtsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.Transaction>> GetTransactionsWithoutDebtsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChargeByID", ReplyAction="http://tempuri.org/IService1/GetChargeByIDResponse")]
        System.Threading.Tasks.Task<OrAhemet.ServiceReference1.Charge> GetChargeByIDAsync(int chargesID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertUser", ReplyAction="http://tempuri.org/IService1/InsertUserResponse")]
        System.Threading.Tasks.Task<int> InsertUserAsync(OrAhemet.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(OrAhemet.ServiceReference1.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertFamily", ReplyAction="http://tempuri.org/IService1/InsertFamilyResponse")]
        System.Threading.Tasks.Task<int> InsertFamilyAsync(OrAhemet.ServiceReference1.Family family);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteFamily", ReplyAction="http://tempuri.org/IService1/DeleteFamilyResponse")]
        System.Threading.Tasks.Task DeleteFamilyAsync(int familyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFamilyByID", ReplyAction="http://tempuri.org/IService1/GetFamilyByIDResponse")]
        System.Threading.Tasks.Task<OrAhemet.ServiceReference1.Family> GetFamilyByIDAsync(int FamilyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChildrenByFamilyID", ReplyAction="http://tempuri.org/IService1/GetChildrenByFamilyIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.Child>> GetChildrenByFamilyIDAsync(OrAhemet.ServiceReference1.Family family);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPaymentAccountsByFamilyID", ReplyAction="http://tempuri.org/IService1/GetPaymentAccountsByFamilyIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.PaymentAccount>> GetPaymentAccountsByFamilyIDAsync(OrAhemet.ServiceReference1.Family family);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCreditCardByID", ReplyAction="http://tempuri.org/IService1/GetCreditCardByIDResponse")]
        System.Threading.Tasks.Task<OrAhemet.ServiceReference1.CreditCard> GetCreditCardByIDAsync(int creditCardID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCreditCardByPaymentAccountID", ReplyAction="http://tempuri.org/IService1/GetCreditCardByPaymentAccountIDResponse")]
        System.Threading.Tasks.Task<OrAhemet.ServiceReference1.CreditCard> GetCreditCardByPaymentAccountIDAsync(int paymentAccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHorahatKevaByID", ReplyAction="http://tempuri.org/IService1/GetHorahatKevaByIDResponse")]
        System.Threading.Tasks.Task<OrAhemet.ServiceReference1.HorahatKeva> GetHorahatKevaByIDAsync(int horahatKevaID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetHorahatKevaByPaymentAccountID", ReplyAction="http://tempuri.org/IService1/GetHorahatKevaByPaymentAccountIDResponse")]
        System.Threading.Tasks.Task<OrAhemet.ServiceReference1.HorahatKeva> GetHorahatKevaByPaymentAccountIDAsync(int paymentAccountID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChargesByFamilyID", ReplyAction="http://tempuri.org/IService1/GetChargesByFamilyIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.Charge>> GetChargesByFamilyIDAsync(OrAhemet.ServiceReference1.Family family);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetChildByID", ReplyAction="http://tempuri.org/IService1/GetChildByIDResponse")]
        System.Threading.Tasks.Task<OrAhemet.ServiceReference1.Child> GetChildByIDAsync(int childID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTypeChargeByID", ReplyAction="http://tempuri.org/IService1/GetTypeChargeByIDResponse")]
        System.Threading.Tasks.Task<OrAhemet.ServiceReference1.TypeCharge> GetTypeChargeByIDAsync(int typeChargeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertChild", ReplyAction="http://tempuri.org/IService1/InsertChildResponse")]
        System.Threading.Tasks.Task<int> InsertChildAsync(OrAhemet.ServiceReference1.Child child);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateChild", ReplyAction="http://tempuri.org/IService1/UpdateChildResponse")]
        System.Threading.Tasks.Task UpdateChildAsync(OrAhemet.ServiceReference1.Child child);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteChild", ReplyAction="http://tempuri.org/IService1/DeleteChildResponse")]
        System.Threading.Tasks.Task DeleteChildAsync(int childId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateFamily", ReplyAction="http://tempuri.org/IService1/UpdateFamilyResponse")]
        System.Threading.Tasks.Task UpdateFamilyAsync(OrAhemet.ServiceReference1.Family family);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertTransaction", ReplyAction="http://tempuri.org/IService1/InsertTransactionResponse")]
        System.Threading.Tasks.Task<int> InsertTransactionAsync(OrAhemet.ServiceReference1.Transaction transaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTransaction", ReplyAction="http://tempuri.org/IService1/UpdateTransactionResponse")]
        System.Threading.Tasks.Task UpdateTransactionAsync(OrAhemet.ServiceReference1.Transaction transaction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCharge", ReplyAction="http://tempuri.org/IService1/InsertChargeResponse")]
        System.Threading.Tasks.Task<int> InsertChargeAsync(OrAhemet.ServiceReference1.Charge charge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCharge", ReplyAction="http://tempuri.org/IService1/UpdateChargeResponse")]
        System.Threading.Tasks.Task UpdateChargeAsync(OrAhemet.ServiceReference1.Charge charge);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCharge", ReplyAction="http://tempuri.org/IService1/DeleteChargeResponse")]
        System.Threading.Tasks.Task DeleteChargeAsync(int chargeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCreditCard", ReplyAction="http://tempuri.org/IService1/InsertCreditCardResponse")]
        System.Threading.Tasks.Task<int> InsertCreditCardAsync(OrAhemet.ServiceReference1.CreditCard creditCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCreditCard", ReplyAction="http://tempuri.org/IService1/UpdateCreditCardResponse")]
        System.Threading.Tasks.Task UpdateCreditCardAsync(OrAhemet.ServiceReference1.CreditCard creditCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCreditCard", ReplyAction="http://tempuri.org/IService1/DeleteCreditCardResponse")]
        System.Threading.Tasks.Task DeleteCreditCardAsync(int creditCardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertHorahatKeva", ReplyAction="http://tempuri.org/IService1/InsertHorahatKevaResponse")]
        System.Threading.Tasks.Task<int> InsertHorahatKevaAsync(OrAhemet.ServiceReference1.HorahatKeva horahatKeva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateHorahatKeva", ReplyAction="http://tempuri.org/IService1/UpdateHorahatKevaResponse")]
        System.Threading.Tasks.Task UpdateHorahatKevaAsync(OrAhemet.ServiceReference1.HorahatKeva horahatKeva);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteHorahatKeva", ReplyAction="http://tempuri.org/IService1/DeleteHorahatKevaResponse")]
        System.Threading.Tasks.Task DeleteHorahatKevaAsync(int horahatKevaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertPaymentAccounts", ReplyAction="http://tempuri.org/IService1/InsertPaymentAccountsResponse")]
        System.Threading.Tasks.Task<int> InsertPaymentAccountsAsync(OrAhemet.ServiceReference1.PaymentAccount paymentAccounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertPayment", ReplyAction="http://tempuri.org/IService1/InsertPaymentResponse")]
        System.Threading.Tasks.Task<int> InsertPaymentAsync(OrAhemet.ServiceReference1.PaymentAccount paymentAccounts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePayment_CreditCard", ReplyAction="http://tempuri.org/IService1/DeletePayment_CreditCardResponse")]
        System.Threading.Tasks.Task DeletePayment_CreditCardAsync(int paymentAccountsId, int creditCardId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePayment_HOK", ReplyAction="http://tempuri.org/IService1/DeletePayment_HOKResponse")]
        System.Threading.Tasks.Task DeletePayment_HOKAsync(int paymentAccountsId, int hokId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletePaymentAccounts", ReplyAction="http://tempuri.org/IService1/DeletePaymentAccountsResponse")]
        System.Threading.Tasks.Task DeletePaymentAccountsAsync(int paymentAccountsId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : OrAhemet.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<OrAhemet.ServiceReference1.IService1>, OrAhemet.ServiceReference1.IService1 {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.User>> GetUserTableAsync() {
            return base.Channel.GetUserTableAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.Family>> GetFamilyTableAsync() {
            return base.Channel.GetFamilyTableAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.Transaction>> GetTransactionsWithDebtsAsync() {
            return base.Channel.GetTransactionsWithDebtsAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.Transaction>> GetTransactionsWithoutDebtsAsync() {
            return base.Channel.GetTransactionsWithoutDebtsAsync();
        }
        
        public System.Threading.Tasks.Task<OrAhemet.ServiceReference1.Charge> GetChargeByIDAsync(int chargesID) {
            return base.Channel.GetChargeByIDAsync(chargesID);
        }
        
        public System.Threading.Tasks.Task<int> InsertUserAsync(OrAhemet.ServiceReference1.User user) {
            return base.Channel.InsertUserAsync(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(OrAhemet.ServiceReference1.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public System.Threading.Tasks.Task<int> InsertFamilyAsync(OrAhemet.ServiceReference1.Family family) {
            return base.Channel.InsertFamilyAsync(family);
        }
        
        public System.Threading.Tasks.Task DeleteFamilyAsync(int familyId) {
            return base.Channel.DeleteFamilyAsync(familyId);
        }
        
        public System.Threading.Tasks.Task<OrAhemet.ServiceReference1.Family> GetFamilyByIDAsync(int FamilyID) {
            return base.Channel.GetFamilyByIDAsync(FamilyID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.Child>> GetChildrenByFamilyIDAsync(OrAhemet.ServiceReference1.Family family) {
            return base.Channel.GetChildrenByFamilyIDAsync(family);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.PaymentAccount>> GetPaymentAccountsByFamilyIDAsync(OrAhemet.ServiceReference1.Family family) {
            return base.Channel.GetPaymentAccountsByFamilyIDAsync(family);
        }
        
        public System.Threading.Tasks.Task<OrAhemet.ServiceReference1.CreditCard> GetCreditCardByIDAsync(int creditCardID) {
            return base.Channel.GetCreditCardByIDAsync(creditCardID);
        }
        
        public System.Threading.Tasks.Task<OrAhemet.ServiceReference1.CreditCard> GetCreditCardByPaymentAccountIDAsync(int paymentAccountID) {
            return base.Channel.GetCreditCardByPaymentAccountIDAsync(paymentAccountID);
        }
        
        public System.Threading.Tasks.Task<OrAhemet.ServiceReference1.HorahatKeva> GetHorahatKevaByIDAsync(int horahatKevaID) {
            return base.Channel.GetHorahatKevaByIDAsync(horahatKevaID);
        }
        
        public System.Threading.Tasks.Task<OrAhemet.ServiceReference1.HorahatKeva> GetHorahatKevaByPaymentAccountIDAsync(int paymentAccountID) {
            return base.Channel.GetHorahatKevaByPaymentAccountIDAsync(paymentAccountID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrAhemet.ServiceReference1.Charge>> GetChargesByFamilyIDAsync(OrAhemet.ServiceReference1.Family family) {
            return base.Channel.GetChargesByFamilyIDAsync(family);
        }
        
        public System.Threading.Tasks.Task<OrAhemet.ServiceReference1.Child> GetChildByIDAsync(int childID) {
            return base.Channel.GetChildByIDAsync(childID);
        }
        
        public System.Threading.Tasks.Task<OrAhemet.ServiceReference1.TypeCharge> GetTypeChargeByIDAsync(int typeChargeID) {
            return base.Channel.GetTypeChargeByIDAsync(typeChargeID);
        }
        
        public System.Threading.Tasks.Task<int> InsertChildAsync(OrAhemet.ServiceReference1.Child child) {
            return base.Channel.InsertChildAsync(child);
        }
        
        public System.Threading.Tasks.Task UpdateChildAsync(OrAhemet.ServiceReference1.Child child) {
            return base.Channel.UpdateChildAsync(child);
        }
        
        public System.Threading.Tasks.Task DeleteChildAsync(int childId) {
            return base.Channel.DeleteChildAsync(childId);
        }
        
        public System.Threading.Tasks.Task UpdateFamilyAsync(OrAhemet.ServiceReference1.Family family) {
            return base.Channel.UpdateFamilyAsync(family);
        }
        
        public System.Threading.Tasks.Task<int> InsertTransactionAsync(OrAhemet.ServiceReference1.Transaction transaction) {
            return base.Channel.InsertTransactionAsync(transaction);
        }
        
        public System.Threading.Tasks.Task UpdateTransactionAsync(OrAhemet.ServiceReference1.Transaction transaction) {
            return base.Channel.UpdateTransactionAsync(transaction);
        }
        
        public System.Threading.Tasks.Task<int> InsertChargeAsync(OrAhemet.ServiceReference1.Charge charge) {
            return base.Channel.InsertChargeAsync(charge);
        }
        
        public System.Threading.Tasks.Task UpdateChargeAsync(OrAhemet.ServiceReference1.Charge charge) {
            return base.Channel.UpdateChargeAsync(charge);
        }
        
        public System.Threading.Tasks.Task DeleteChargeAsync(int chargeId) {
            return base.Channel.DeleteChargeAsync(chargeId);
        }
        
        public System.Threading.Tasks.Task<int> InsertCreditCardAsync(OrAhemet.ServiceReference1.CreditCard creditCard) {
            return base.Channel.InsertCreditCardAsync(creditCard);
        }
        
        public System.Threading.Tasks.Task UpdateCreditCardAsync(OrAhemet.ServiceReference1.CreditCard creditCard) {
            return base.Channel.UpdateCreditCardAsync(creditCard);
        }
        
        public System.Threading.Tasks.Task DeleteCreditCardAsync(int creditCardId) {
            return base.Channel.DeleteCreditCardAsync(creditCardId);
        }
        
        public System.Threading.Tasks.Task<int> InsertHorahatKevaAsync(OrAhemet.ServiceReference1.HorahatKeva horahatKeva) {
            return base.Channel.InsertHorahatKevaAsync(horahatKeva);
        }
        
        public System.Threading.Tasks.Task UpdateHorahatKevaAsync(OrAhemet.ServiceReference1.HorahatKeva horahatKeva) {
            return base.Channel.UpdateHorahatKevaAsync(horahatKeva);
        }
        
        public System.Threading.Tasks.Task DeleteHorahatKevaAsync(int horahatKevaId) {
            return base.Channel.DeleteHorahatKevaAsync(horahatKevaId);
        }
        
        public System.Threading.Tasks.Task<int> InsertPaymentAccountsAsync(OrAhemet.ServiceReference1.PaymentAccount paymentAccounts) {
            return base.Channel.InsertPaymentAccountsAsync(paymentAccounts);
        }
        
        public System.Threading.Tasks.Task<int> InsertPaymentAsync(OrAhemet.ServiceReference1.PaymentAccount paymentAccounts) {
            return base.Channel.InsertPaymentAsync(paymentAccounts);
        }
        
        public System.Threading.Tasks.Task DeletePayment_CreditCardAsync(int paymentAccountsId, int creditCardId) {
            return base.Channel.DeletePayment_CreditCardAsync(paymentAccountsId, creditCardId);
        }
        
        public System.Threading.Tasks.Task DeletePayment_HOKAsync(int paymentAccountsId, int hokId) {
            return base.Channel.DeletePayment_HOKAsync(paymentAccountsId, hokId);
        }
        
        public System.Threading.Tasks.Task DeletePaymentAccountsAsync(int paymentAccountsId) {
            return base.Channel.DeletePaymentAccountsAsync(paymentAccountsId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/Server/Service1/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IService1,
        }
    }
}
